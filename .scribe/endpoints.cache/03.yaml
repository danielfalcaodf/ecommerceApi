## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Pedidos ADMIN'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/checkouts/list
    metadata:
      title: 'Buscar todos pedidos'
      description: 'Apresenta uma lista de todos os pedidos com as informações'
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"type":"error","code":401,"massage":"Token is Invalid"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '31'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/checkouts/view/{checkout}'
    metadata:
      title: 'Buscar pedido'
      description: 'Apresenta as informações do pedido especificado'
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      checkout:
        name: checkout
        description: 'O ID do pedido'
        required: true
        example: 4
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"type":"error","code":401,"massage":"Token is Invalid"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '30'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/checkouts/new
    metadata:
      title: 'Criar um pedido do comprador'
      description: |-
        Cadastra um pedido do comprador especificando o ID do comprador.
        Se estiver tudo certo será enviado um email ao comprador com a confirmação do pedido
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      idbuyer:
        name: idbuyer
        description: 'O ID do comprador .'
        required: true
        example: deleniti
        type: string
      products:
        name: products
        description: 'A lista dos produtos do pedido'
        required: true
        example:
          -
            id: '4'
            quant: '6'
          -
            id: '7'
            quant: '2'
          -
            id: '2'
            quant: '3'
        type: 'object[]'
      'products[].id':
        name: 'products[].id'
        description: 'O ID do produto.'
        required: true
        example: earum
        type: string
      'products[].quant':
        name: 'products[].quant'
        description: 'A quantidade do produto.'
        required: true
        example: aut
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/checkouts/edit/{checkout}'
    metadata:
      title: 'Editar Pedido'
      description: 'Editar um pedido (comprador e os produtos) especificado, se tudo estiver certo apresenta as informações do pedido'
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      checkout:
        name: checkout
        description: 'O ID do pedido'
        required: true
        example: 15
        type: integer
    queryParameters: []
    bodyParameters:
      idbuyer:
        name: idbuyer
        description: 'O ID do comprador.'
        required: true
        example: hic
        type: string
      products:
        name: products
        description: 'A lista de produtos do pedido'
        required: true
        example:
          -
            id: '4'
            quant: '6'
          -
            id: '7'
            quant: '2'
          -
            id: '2'
            quant: '3'
        type: 'object[]'
      'products[].id':
        name: 'products[].id'
        description: 'O ID do produto.'
        required: true
        example: ea
        type: string
      'products[].quant':
        name: 'products[].quant'
        description: 'A quantidade do produto.'
        required: true
        example: amet
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/checkouts/delete/{checkout}'
    metadata:
      title: 'Deletar Pedido'
      description: 'Deletar um pedido especificado'
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      checkout:
        name: checkout
        description: 'O ID do pedido'
        required: true
        example: 6
        type: integer
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
