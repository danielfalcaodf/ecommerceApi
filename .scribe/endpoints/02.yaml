name: Pedidos
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/checkouts/me/list
    metadata:
      title: 'Buscar todos pedidos do usuário'
      description: 'Apresenta todos os pedidos do usuário logado que foi passado com JWT'
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"type":"error","code":401,"massage":"Token is Invalid"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/checkouts/me/view/{checkout}'
    metadata:
      title: 'Buscar pedido do usuário'
      description: 'Apresenta um pedido especificado do usuário logado que foi passado com JWT, mostrando só o pedido dele'
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      checkout:
        name: checkout
        description: 'O ID do pedido'
        required: true
        example: 7
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"type":"error","code":401,"massage":"Token is Invalid"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/checkouts/me/new
    metadata:
      title: 'Cadastrar pedido do usuário'
      description: |-
        Cadastrar um pedido do usuário logado, que foi passado com JWT. Caso o usuário
        não tenha cadastro como comprador, deve informa o CPF e Telefone ou celular do usuário para criar ele como comprador.
        Se estiver tudo certo será enviado um email ao comprador com a confirmação do pedido
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      idbuyer:
        name: idbuyer
        description: ''
        required: false
        example: null
        type: string
      products:
        name: products
        description: 'A lista dos produtos do pedido'
        required: true
        example:
          -
            id: '4'
            quant: '6'
          -
            id: '7'
            quant: '2'
          -
            id: '2'
            quant: '3'
        type: 'object[]'
      'products[].id':
        name: 'products[].id'
        description: 'O ID do produto.'
        required: true
        example: ab
        type: string
      'products[].quant':
        name: 'products[].quant'
        description: 'A quantidade do produto.'
        required: true
        example: nobis
        type: string
      phone_cell:
        name: phone_cell
        description: 'O telefone ou celular válido.'
        required: false
        example: non
        type: string
      cpf:
        name: cpf
        description: 'O CPF válido.'
        required: false
        example: perspiciatis
        type: string
    responses: []
    responseFields: []
